{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { RouterModule } from \"@angular/router\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { LoginModule } from \"./login/login.module\";\r\nimport { TeacherModule } from \"./teacher/teacher.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(\r\n            [\r\n                {\r\n                    path: \"\",\r\n                    redirectTo: \"/login\",\r\n                    pathMatch: \"full\"\r\n                },\r\n                {\r\n                    path: \"login\",\r\n                    pathMatch: \"full\",\r\n                    loadChildren: (): Promise<LoginModule> =>\r\n                        import(\"./login/login.module\")\r\n                            .then(m => m.LoginModule)\r\n                },\r\n                {\r\n                    path: \"teacher\",\r\n                    loadChildren: (): Promise<TeacherModule> =>\r\n                        import(\"./teacher/teacher.module\")\r\n                            .then(m => m.TeacherModule)\r\n                }\r\n            ]\r\n        )\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'smalp-demo';\n}\n","<mat-toolbar color=\"primary\">\r\n    <span>Smart Learning Platform</span>\r\n</mat-toolbar>\r\n<router-outlet></router-outlet>","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppComponent } from \"./app.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { configure } from \"mobx\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        MatToolbarModule,\n        AppRoutingModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        configure({enforceActions: \"always\"});\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}